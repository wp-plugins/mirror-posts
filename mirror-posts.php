<?php
/*
Plugin Name: Mirror Posts
Plugin URI: http://easwy.com/blog/wordpress/mirror-posts/
Description: This plugin will mirror posts from your wordpress blog to another blog via BloggerAPI/WebBlogAPI.
Version: 0.1
Author: Easwy Yang
Author URI: http://easwy.com/
*/

/*  Copyright 2009-2010  Easwy Yang  (Homepage: http://easwy.com/)

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/


### Create Text Domain For Translations
add_action('init', 'mirror_posts_textdomain');
function mirror_posts_textdomain() {
    $plugin_dir = basename(dirname(__FILE__));
    load_plugin_textdomain( 'mirror_posts', 'wp-content/plugins/' . $plugin_dir, $plugin_dir );
}


### Function: Post URL Option Menu
add_action('admin_menu', 'mirror_posts_menu');
function mirror_posts_menu() {
    $plugin_dir = basename(dirname(__FILE__));
    if (function_exists('add_options_page')) {
        add_options_page(__('Mirror Posts', 'mirror_posts'),
            __('Mirror Posts', 'mirror_posts'), 'manage_options',
            $plugin_dir . '/mirror-posts-options.php') ;
    }
}

require_once dirname(__FILE__) . '/xmlrpc.php';
define("XMLRPC_DEBUG", 1);

### Function: Post URL: Add Post URL for Post
add_action('the_content', 'mirror_posts', 0);
function mirror_posts($text) {
/*
 *    $mirror_posts_options = get_option('mirror_posts_options');
 *
 *    // replace macros within the post, if enabled
 *    [>
 *    $iner_url_str = trim($mirror_posts_options['iner_url_str']);
 *    if (!empty($iner_url_str))
 *    {
 *        $iner_url_str = str_replace("%site_url%", site_url('/'), $iner_url_str);
 *        $iner_url_str = str_replace("%site_name%", get_bloginfo('sitename'), $iner_url_str);
 *        $iner_url_str = str_replace("%post_url%", get_permalink(), $iner_url_str);
 *        $iner_url_str = str_replace("%post_title%", the_title('', '', false), $iner_url_str);
 *        $iner_url_str = stripslashes($iner_url_str);
 *
 *        $text = str_replace("%wpurl%", $iner_url_str, $text);
 *    }
 *     
 *
 *    if ((is_single() && $mirror_posts_options['add_to_single'])
 *        || (is_home() && $mirror_posts_options['add_to_home'])
 *        || (is_page() && $mirror_posts_options['add_to_page'])
 *        || (is_category() && $mirror_posts_options['add_to_category'])
 *        || (is_tag() && $mirror_posts_options['add_to_tag'])
 *        || (is_feed() && $mirror_posts_options['add_to_feed'])
 *        || ((is_day() || is_month() || is_year()) && $mirror_posts_options['add_to_archive'])
 *    ) {
 *        // Add header text if not empty
 *        $header_text = $mirror_posts_options['header_text'];
 *        $header_text = trim($header_text);
 *        if (!empty($header_text))
 *        {
 *            $header_text = str_replace("%site_url%", site_url('/'), $header_text);
 *            $header_text = str_replace("%site_name%", get_bloginfo('sitename'), $header_text);
 *            $header_text = str_replace("%post_url%", get_permalink(), $header_text);
 *            $header_text = str_replace("%post_title%", the_title('', '', false), $header_text);
 *            $header_text = stripslashes($header_text);
 *            $text = $header_text . $text;
 *        }
 *
 *        $footer_text = $mirror_posts_options['footer_text'];
 *        $footer_text = trim($footer_text);
 *        if (!empty($footer_text))
 *        {
 *            $footer_text = str_replace("%site_url%", site_url('/'), $footer_text);
 *            $footer_text = str_replace("%site_name%", get_bloginfo('sitename'), $footer_text);
 *            $footer_text = str_replace("%post_url%", get_permalink(), $footer_text);
 *            $footer_text = str_replace("%post_title%", the_title('', '', false), $footer_text);
 *            $footer_text = stripslashes($footer_text);
 *            $text .= $footer_text;
 *        }
 *
 *        // add credit?
 *        $add_credit = $mirror_posts_options["add_credit"];
 *        if ($add_credit) 
 *        {
 *            $text .= sprintf(__('<div style="margin-top: 0; margin-bottom: 15px; color: #888888; font-size: 80%%; font-style: italic"><p>Post Footer automatically generated by <a href="%1$s" style="color: #8888FF; text-decoration: underline;">mirror_posts plugin</a> for wordpress.</p></div>', 'mirror_posts'), 'http://easwy.com/blog/wordpress/mirror_posts/');
 *        }
 *    }
 *
 *    return $text;
 */
}

### Function: Post URL Options
add_action('activate_' . basename(dirname(__FILE__)) . '/mirror_posts.php', 'mirror_posts_init');
function mirror_posts_init() {
    mirror_posts_textdomain();

    /*
    $default_footer_text = addslashes(__('<div style="margin-top: 15px; font-style: italic"><p><strong>From</strong> <a href="%site_url%">%site_name%</a>, <strong>post</strong> <a href="%post_url%">%post_title%</a></p></div>','mirror_posts'));

    // if has mirror_posts_options, upgrade it
    if ($mirror_posts_options = get_option('mirror_posts_options'))
    {
        // Upgrade add_credit
        if (isset($mirror_posts_options['add_credit']))
        {
            if ($mirror_posts_options['add_credit'] == 'Yes')
            {
                $mirror_posts_options['add_credit'] = true;
            }
            else
            {
                $mirror_posts_options['add_credit'] = false;
            }
        }
        else
        {
            $mirror_posts_options['add_credit'] = true;
        }

        // Upgrade add_to_beginning
        if (isset($mirror_posts_options['add_to_beginning'], $mirror_posts_options['post_url_text']))
        {
            if ($mirror_posts_options['add_to_beginning'] == 'No')
            {
                $mirror_posts_options['footer_text'] = $mirror_posts_options['post_url_text'];
            }
            else
            {
                $mirror_posts_options['header_text'] = $mirror_posts_options['post_url_text'];
            }

            // remove obsoleted options
            unset ($mirror_posts_options['add_to_beginning']);
            unset ($mirror_posts_options['post_url_text']);
        }
        else
        {
            $mirror_posts_options['header_text'] = '';
            $mirror_posts_options['footer_text'] = $default_footer_text;

            // remove obsoleted options
            unset ($mirror_posts_options['add_to_beginning']);
            unset ($mirror_posts_options['post_url_text']);
        }

        $mirror_posts_options['add_to_home'] = false;
        $mirror_posts_options['add_to_category'] = false;
        $mirror_posts_options['add_to_tag'] = false;
        $mirror_posts_options['add_to_archive'] = false;
        $mirror_posts_options['add_to_single'] = true;
        $mirror_posts_options['add_to_feed'] = false;
        $mirror_posts_options['add_to_page'] = false;

        //$mirror_posts_options['iner_url_str'] = '';

        // refresh options
        //update_option('mirror_posts_options', $mirror_posts_options);
        delete_option('mirror_posts_options');
        add_option('mirror_posts_options', $mirror_posts_options);
    }
    // otherwise, install it
    else
    {
        // Add Options
        $mirror_posts_options = array();
        $mirror_posts_options['footer_text'] = $default_footer_text;
        $mirror_posts_options['header_text'] = '';
        $mirror_posts_options['add_credit'] = true;
        $mirror_posts_options['add_to_beginning'] = false;
        $mirror_posts_options['add_to_home'] = true;
        $mirror_posts_options['add_to_category'] = true;
        $mirror_posts_options['add_to_tag'] = true;
        $mirror_posts_options['add_to_archive'] = true;
        $mirror_posts_options['add_to_single'] = true;
        $mirror_posts_options['add_to_feed'] = true;
        $mirror_posts_options['add_to_page'] = true;
        //$mirror_posts_options['iner_url_str'] = '';
        add_option('mirror_posts_options', $mirror_posts_options);
    }
     */
}

function bloggerGetBlogInfo($resp) {
    $appkey = XMLRPC_prepare("");
    $username = XMLRPC_prepare(getUserName());
    $passwd = XMLRPC_prepare(getUserPasswd());
    $param = array($appkey, $username, $passwd);

    list($rc, $resp) = XMLRPC_request(getBlogUrl(),
        getBlogApiUrl(),
        'blogger.getUsersBlogs', $param);

    return $rc;
}

function metaWeblogNewPost () {
    //$post['dataTime'] = XMLRPC_convert_timestamp_to_iso8601();
    $p['title'] = "Test Again";
    $p['description'] = "A test post from mirror-post plugin of Wordpress by Easwy Yang.";
    $p['dateCreated'] = date("Ymd\TH:i:s");
    $post = XMLRPC_prepare($p);

    //$blogid = XMLRPC_prepare("116702");
    $blogid = getBlogId();
    if (empty($blogid)) {
        return false;
    }
    $username = XMLRPC_prepare(getUserName());
    $passwd = XMLRPC_prepare(getUserPasswd());
    $publish = XMLRPC_prepare(true);

    $param = array($blogid, $username, $passwd, $post, $publish);

    list($rc, $resp) = XMLRPC_request(getBlogUrl(),
        getBlogApiUrl(),
        'metaWeblog.newPost', $param);

    return $rc;
}

function metaWeblogGetRecentPosts() {
    // not work now
    $appkey = XMLRPC_prepare("");
    $blogid = XMLRPC_prepare("116702");
    $username = XMLRPC_prepare("easwy");
    $passwd = XMLRPC_prepare("mI9fp1a9");
    $numberOfPosts = XMLRPC_prepare(2);
    $param = array($blogid, $username, $passwd, $numberOfPosts);

    list($rc, $resp) = XMLRPC_request('blog.csdn.net',
        '/easwy/services/MetaBlogApi.aspx',
        'metaWeblog.getRecentPosts', $param);
}

function getUserName() {
    return "easwy";
}

function getUserPasswd() {
    return "mI9fp1a9";
}

function getBlogUrl() {
    return "blog.csdn.net";
}

function getBlogApiUrl() {
    return "/easwy/services/MetaBlogApi.aspx";
}

function getBlogId() {
    $rc = bloggerGetBlogInfo($resp);
    if ($rc) {
        return $resp["blogid"];
    }
    else {
        return "";
    }
}


/*
getRecentPosts();
XMLRPC_debug_print();
 */

/*
$result = XMLRPC_request('betty.userland.com', '/RPC2', 'examples.getStateName', array(XMLRPC_prepare(41)));
echo $result[0];
echo $result [1];
XMLRPC_debug_print();
 */

/*
$blogid = XMLRPC_prepare("0");
$username = XMLRPC_prepare("easwy");
$passwd = XMLRPC_prepare("thinker");
$publish = XMLRPC_prepare(true);

$param = array($blogid, $username, $passwd, $post, $publish);

list($rc, $resp) = XMLRPC_request('thinker',
    '/wordpress/xmlrpc.php',
    'metaWeblog.newPost', $param);
 */

?>
